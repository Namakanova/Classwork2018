for x in range (500, 400, -22):
    print(x)
print(x)

print()

x = 500
while x > 400:            #абсурдный пример, есть цикл фор это не нужно
    print(x)
    x -= 22 # x = x - 22
peinr(x)

s = 0
while s < 100:
    number = int(input('Введите число')
                 s += number #s = s + number
                 print ('Сумма введенных чисел равна', s)

Бесконечные циклы (отмена  = ctrl + c) #удобно вставлять в середине, когда нужно проверять не первое условие
                 

while True: # T - capital letter
    answer = int(input('Сколько будет 2+2?'))
                 if answer == 4:
                 print('Правильно'')
                       break # break и continue можно не добавлять else
                    print('Попробуйте ещё раз')
                
#альтернативный вариант                 

answer = 0
        while answer != 4:
                       answer = int(input('Сколько будет'))
            print('Правильно') #но в этом случае невозможно вставить попробуйте еще раз

#список - массив, но не совсем. в списках элементы не должны быть одного типа
a = [1, 2, 3, 4, 5] #только через запятую
print (a)
print(len(a))
print(type(a))

#Можем взять любой элемент

print(a[0])
                       print(a[3])
                       print(a[-1])

b = [-11, 3.12, 'hello', True]
                       print(b[2])#hello
                       print(b[2][1])# 'e', взятое от 'hello'
                       print(b[0] + 50) #опять же только с цифрами, со вторым элементом такое не получится

c = list('abc') #можно задать список функцией list, как и str
c = list(1)                      #список только от итерируемых, тут ошибка будет
c = list (range(5))

                       empty = [] #empty list when you don't know which elements will be there
                       empty2 = list()

    for x in b:
        print(x)

    for i in range (len(b)):
                       print(i, b[i]) #выводит пары элементов и их индексы


        d = [1, 2, 3, 4]
        d[0] = -100
        print(d)  #строки неизменяемы, а списки можно изменить


        #можно менять элементы списка внутри цикла
        for i in range(len(d)):
                       d[i] *= 2
                       print(d)
                       #не меняй размер списка! Меняй, но не добавляй элементы

    s = 'abc' #сделать все буквы большими. 
    s.upper () #это метод. т.е. функция, привязанная к типу переменных

    a = [1, 2, 3, 4]
    a.append(5) #добавляет элемент в конец списка


        #список может быть элементом другого списка
            b = ['hello', ['world', 'Earth']]
            print(b[1][0])
            b.append ('!')
#2се элементы одного списка доб. в другой
            a = list (range(5))
            b = list (range(5, 10))
                       a.append (b) #не годится, мы хотим, чтобы список b был включен без квадратных скобок
                       
                       for x in b:
                       a.append (x)

                #но есть для этого отдельный метод
                       a.extend(b)


                       #как удалять элементы
                       a.pop(0) #удалим нулевой элемент
                       del a[-1] #оператор удаления

                       #вставить элемент
                       a = list(range(5))
                       a.insert (4, 3.12)  #первое значение номер индекса, второе то что нужно вставить

                       b = a.copy() #копирование списка
                       b = a # списки не скопированы, просто теперь у одного списка два указателя. Переменная не хранит, а указывает на информацию
#срезы
                       s = 'abcdef'
                       a = ['Long', 'ago', 'in', 'far', 'away']

                       print(s[0])
                       print(s[len(s) - 1]) # = print(s[-1])

                       print(s[1:]) #все элементы со второго до последнего
                       print(s[1:len(s)]) #the same

                       print(s[1:-1])
                       print(s[1:len(s)-])

                       #все элементы кроме последних двух
                       print(s[0:-2])
                       print (s[0:-2])
                    #последние три элемента из списка
                    b = list(s [-3:])

                       #если берем несуществующие или выходящие за границы срез. он все равно работает

                       print (s[2:10]) #просто возьмет все элементы до конца, десятый эоемент не возьмет,а ДО десятого да
                       print (s[5:1] == '') #просто пустая строчка
a[:2] = [ 'совсем', 'недавно'] #заменит первы два элемента

                       print (s[1:-1:2])
                       print (s{::-1]) #задом наперед 
                       print (s[len(s) -1::-1])
                        #с предпоследнего до нулевого с шагом 2
                       print (s[-2::-2])

                       a = [[1, 2, 3][4, 5, 6] #списко с другими списками как бы двумерный массив
                       for row in a:
                            print(row)
                            for x in row:
                            print(x) #вывели все элементы, входящие в двумерный список
                            print (x, end='-') #end вместо переноса строки при выводе
                            print () #по строчкам выводит внутренние списки
